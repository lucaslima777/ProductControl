apply plugin: 'com.android.application'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "lln.product.control"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        develop {
            debuggable true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            applicationIdSuffix = '.dev'
            versionNameSuffix = '-dev'
            resValue "string", "buildType", "dev"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher"
            ]

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            resValue "string", "buildType", "release"
            manifestPlaceholders = [
                    appIcon: "@mipmap/ic_launcher"
            ]
        }
    }

    def versionPropsFile = file('version.properties')
    Properties versionProps = new Properties()

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))
    }
    def code = versionProps['VERSION_CODE'].toInteger()
    def name = versionProps['VERSION_NAME']

    flavorDimensions "version"
    productFlavors {
        troppo {
            dimension "version"
            applicationId 'product.control.troppo'
            versionCode code
            versionName name
        }

    }
}

def appcompatVersion = "1.0.2"
def constraintlayoutVersion = "1.1.3"
def junitVersion = "4.12"
def testrunnerVersion = "1.2.0"
def testespressoVersion = "3.2.0"
def googlematerialVersion = "1.0.0"
def yarolegovichscrollviewVersion = "1.4.7"
def yarolegovichmpVersion = "1.0.9"
def glideVersion = "4.7.1"
def room_version = "2.2.0-beta01"
def lottieVersion = "3.0.7"


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test:runner:$testrunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$testespressoVersion"
    implementation "com.google.android.material:material:$googlematerialVersion"
    implementation "com.yarolegovich:discrete-scrollview:$yarolegovichscrollviewVersion"
    implementation "com.yarolegovich:mp:$yarolegovichmpVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"
    androidTestImplementation "android.arch.persistence.room:testing:$room_version"
    implementation "com.airbnb.android:lottie:$lottieVersion"
}
